(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{516:function(_,v,s){"use strict";s.r(v);var e=s(6),t=Object(e.a)({},(function(){var _=this,v=_.$createElement,s=_._self._c||v;return s("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[s("p",[s("strong",[_._v("输入URL到看到页面，中间经历的环节")])]),_._v(" "),s("ul",[s("li",[_._v("URI：统一资源标识符\n"),s("ul",[s("li",[_._v("URL：统一资源定位符")]),_._v(" "),s("li",[_._v("URN：统一资源名称")])])])]),_._v(" "),s("h2",{attrs:{id:"_1-url解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-url解析"}},[_._v("#")]),_._v(" 1. URL解析")]),_._v(" "),s("p",[s("img",{attrs:{src:"http://note.youdao.com/yws/public/resource/72396c5ddee8104910f29d904a6e9569/xmlnote/WEBRESOURCEab7915ca3945f14f85493a59cca29699/4146",alt:"image"}})]),_._v(" "),s("ul",[s("li",[_._v("传输协议：用什么样的协议负责客户端和服务器端的信息传输\n"),s("ul",[s("li",[_._v("HTTP:最常用的 超文本传输协议  HTTP1.0/1.1/2.0")]),_._v(" "),s("li",[_._v("HTTPS:HTTP+SSL(TSL)比HTTP更加的安全")]),_._v(" "),s("li",[_._v("FTP:文件上的上传下载「我们把本地内容部署到服务器，或者从服务器拉取内容  FTP工具」")]),_._v(" "),s("li",[_._v("...")])])]),_._v(" "),s("li",[_._v("域名:对服务器外网IP的一个重命名\n"),s("ul",[s("li",[_._v("顶级域名/一级域名/二级域名...")]),_._v(" "),s("li",[_._v(".cn/com/net/org/cc...")])])]),_._v(" "),s("li",[_._v("端口号:区分同一个服务器上不同的服务的\n"),s("ul",[s("li",[_._v("0~65535")]),_._v(" "),s("li",[_._v("默认端口号：浏览器会根据输入的协议，给与默认端口号「前提是自己没有指定」\n"),s("ul",[s("li",[_._v("HTTP -> 80")]),_._v(" "),s("li",[_._v("HTTPS -> 443")]),_._v(" "),s("li",[_._v("FTP -> 21")]),_._v(" "),s("li",[_._v("...")])])])])]),_._v(" "),s("li",[_._v("请求资源的文件路径\n"),s("ul",[s("li",[_._v("URL重写")])])]),_._v(" "),s("li",[_._v("问号参数\n"),s("ul",[s("li",[_._v("客户端把信息传递给服务器")]),_._v(" "),s("li",[_._v("A页面把信息传递给B页面")]),_._v(" "),s("li",[_._v("A组件把把信息传递给B组件")]),_._v(" "),s("li",[_._v("...")])])]),_._v(" "),s("li",[_._v("哈希值 HASH\n"),s("ul",[s("li",[_._v("锚点定位")]),_._v(" "),s("li",[_._v("HASH路由")]),_._v(" "),s("li",[_._v("...")])])]),_._v(" "),s("li",[_._v("编码问题：处理：中文、特殊符号...\n"),s("ul",[s("li",[_._v("encodeURI/decodeURI：对整个URL编码，处理中文")]),_._v(" "),s("li",[_._v("encodeURIComponent/decodeURIComponent：对传递的参数单独的编码，处理中文以及特殊符号")]),_._v(" "),s("li",[_._v("escape/unescape：客户端对中文进行编码解码「一般只用于客户端信息传输，例如：cookie」")]),_._v(" "),s("li",[_._v("也可以基于自己设定的加密机密规则处理「对称加密」")]),_._v(" "),s("li",[_._v("对于某些数据，我们需要采用非对称加密「不可解密的，例如：md5」")])])])]),_._v(" "),s("h2",{attrs:{id:"_2-缓存检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-缓存检测"}},[_._v("#")]),_._v(" 2. 缓存检测")]),_._v(" "),s("p",[s("strong",[_._v("缓存一般指的都是静态资源文件的缓存，这个一般是客户端和服务器端根据一些协商的规则，自动去完成的缓存策略「不用我们自己编写啥代码去处理」（只有API接口数据缓存，是需要前端开发自己去完成的）")])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("缓存位置：")]),_._v(" "),s("ul",[s("li",[_._v("Memory Cache : 内存缓存 「一般用于，页面没有关闭，只是刷新」")]),_._v(" "),s("li",[_._v("Disk Cache：硬盘缓存  「页面关闭后重新打开」")])])]),_._v(" "),s("li",[s("p",[_._v("缓存处理：")]),_._v(" "),s("ul",[s("li",[_._v("强缓存  Expires「HTTP1.0」 / Cache-Control「HTTP1.1」\n"),s("ul",[s("li",[s("p",[_._v("如果获取的是强缓存中的信息，HTTP状态码也是200")])]),_._v(" "),s("li",[s("p",[_._v("如果是从服务器成功从新获取，HTTP状态码也是200")])]),_._v(" "),s("li",[s("p",[_._v("强缓存不适合于静态页面的缓存？")]),_._v(" "),s("ul",[s("li",[_._v("如果页面都缓存了，以后服务器更新了产品，我们访问也是走的缓存数据，这样看不到最新的内容了"),s("br"),_._v("\n「强缓存模式下，其他资源信息的缓存和部署以及更新」")]),_._v(" "),s("li",[_._v("项目资源更新，每一次部署的时候，在html中\n"),s("ul",[s("li",[_._v("所有请求的资源文件「例如CSS/JS/图片...」后面都带一个时间戳")]),_._v(" "),s("li",[_._v("或者每一次资源的更新，基于webpack生成不同的资源名称「HASH戳」")])])])])])])])]),_._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[_._v("      "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<")]),_._v("link href"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'index.css?20210109120512'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v(">")]),_._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<")]),_._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'asdasdsa4356.js'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v(">")]),_._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("--")]),_._v("过了一天  css"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("/")]),_._v("js内容改变了，重新部署了\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<")]),_._v("link href"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'index.css?20210110120512'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v(">")]),_._v(" 发现后缀和上次缓存的不一样，则从新拉取最新的信息\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("<")]),_._v("script src"),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[_._v("'35453rtdgd.js'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[_._v(">")]),_._v("\n")])]),_._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[_._v("1")]),s("br"),s("span",{staticClass:"line-number"},[_._v("2")]),s("br"),s("span",{staticClass:"line-number"},[_._v("3")]),s("br"),s("span",{staticClass:"line-number"},[_._v("4")]),s("br"),s("span",{staticClass:"line-number"},[_._v("5")]),s("br")])]),s("ul",[s("li",[s("p",[_._v("协商缓存 Last-Modified/If-Modified-Since 「HTTP1.0」 & ETag/If-None-Match 「HTTP1.1」")]),_._v(" "),s("ul",[s("li",[_._v("静态页面可以使用协商缓存处理")]),_._v(" "),s("li",[_._v("对于其余的资源文件，我们使用 强缓存+协商缓存")])]),_._v(" "),s("p",[_._v("检测缓存 ->先看是否存在强缓存「强缓存存在走强缓存」->强缓存不存在，再看是否有协商缓存「协商存在，还是走缓存」->协商也不存在，则直接从服务器获取最新的内容  -> 缓存起来 ...")])]),_._v(" "),s("li",[s("p",[_._v("数据缓存：")]),_._v(" "),s("ul",[s("li",[_._v("本地存储：cookie / localStorage / sessionStorage")]),_._v(" "),s("li",[_._v("cookie:存储内容很少4KB、cookie信息自己会默认在客户端和服务器端传来传去「内容信息多会影响前后端通信的速度」、不稳定「基于安全卫士等可以把其清除掉」、用户可以禁用cookie...")]),_._v(" "),s("li",[_._v("localStorage:存储5MB、持久保存、稳定、和服务器也没关系")]),_._v(" "),s("li",[_._v("sessionStorage:页面关闭则消失")]),_._v(" "),s("li",[_._v("vuex+redux:类似于全局变量，页面刷新就没有了")]),_._v(" "),s("li",[_._v("......")])])])])])]),_._v(" "),s("h2",{attrs:{id:"_3-dns解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-dns解析"}},[_._v("#")]),_._v(" 3. DNS解析")]),_._v(" "),s("p",[s("strong",[_._v("每一次DNS解析时间预计在20~120毫秒")])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("减少DNS解析次数「一个网站中访问的资源尽可能在一个服务器上」")]),_._v(" "),s("ul",[s("li",[_._v("大型项目中，我么往往是分开服务器部署\n"),s("ul",[s("li",[_._v("Web服务器：处理资源文件「例如：html/css/js」的请求")]),_._v(" "),s("li",[_._v("图片服务器：处理图片等富媒体资源")]),_._v(" "),s("li",[_._v("数据服务器：处理API接口请求")]),_._v(" "),s("li",[_._v("第三方服务器：获取第三方的一些数据")]),_._v(" "),s("li",[_._v("...\n--\x3e充分利用服务器的资源，提高不同资源服务器的处理和并发性\n--\x3e提高HTTP的并发数「同一个服务器允许最大的并发数是5~7个」")])])])])]),_._v(" "),s("li",[s("p",[_._v("加大DNS解析的次数「不好的」")])]),_._v(" "),s("li",[s("p",[_._v("DNS预获取（DNS Prefetch）"),s("br"),_._v("\n利用页面渲染的”异步性“，在渲染页面的过程中，同时去做DNS解析「解析的结果缓存下来」，后期渲染过程中，再次遇到对应域名的资源请求，直接获取缓存的解析记录即可...")])])]),_._v(" "),s("h2",{attrs:{id:"_4-tcp三次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-tcp三次握手"}},[_._v("#")]),_._v(" 4. TCP三次握手")]),_._v(" "),s("p",[s("strong",[_._v("建立客户端和服务器之间的网络连接通道「只有通道建立好，才可以基于HTTP/HTTPS传输信息」")])]),_._v(" "),s("ul",[s("li",[s("p",[_._v("TCP网络通信：更加稳定可靠「三次握手 & 四次挥手」，但是也会慢")])]),_._v(" "),s("li",[s("p",[_._v("UDP网络通信：虽然建立通道比较快，但是不稳定，信息传输过程中可能会丢失信息")])]),_._v(" "),s("li",[s("p",[_._v("seq序号，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记")])]),_._v(" "),s("li",[s("p",[_._v("ack确认序号，只有ACK标志位为1时，确认序号字段才有效，ack=seq+1")])]),_._v(" "),s("li",[s("p",[_._v("标志位")]),_._v(" "),s("ul",[s("li",[s("p",[_._v("ACK：确认序号有效")])]),_._v(" "),s("li",[s("p",[_._v("RST：重置连接")])]),_._v(" "),s("li",[s("p",[_._v("SYN：发起一个新连接")])]),_._v(" "),s("li",[s("p",[_._v("FIN：释放一个连接")])]),_._v(" "),s("li",[s("p",[_._v("……\n"),s("img",{attrs:{src:"http://note.youdao.com/yws/public/resource/72396c5ddee8104910f29d904a6e9569/xmlnote/WEBRESOURCE052b66fd86c7738cc45041c0397e99e0/4148",alt:"image"}})])])])])]),_._v(" "),s("ol",[s("li",[_._v("第一次握手，由浏览器发起，告诉服务器我要发送请求了")]),_._v(" "),s("li",[_._v("第二次握手，由服务器发起，告诉浏览器我准备接受了，你赶紧发送吧")]),_._v(" "),s("li",[_._v("第三次握手，由浏览器发送，告诉服务器，我马上就发了，准备接受吧"),s("br"),_._v(" "),s("strong",[_._v("“三次握手”的目的是“为了防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误”。")])])]),_._v(" "),s("h2",{attrs:{id:"_5-基于传输协议进行数据传输"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-基于传输协议进行数据传输"}},[_._v("#")]),_._v(" 5. 基于传输协议进行数据传输")]),_._v(" "),s("ul",[s("li",[_._v("HTTP事物：一个完整的请求和响应，称为一次HTTP事物")]),_._v(" "),s("li",[_._v("HTTP报文：客户端和服务器之间通信的所有内容，统称为HTTP报文「控制台 NetWork」\n"),s("ul",[s("li",[_._v("起始行：请求起始行、响应起始行")]),_._v(" "),s("li",[_._v("首部（头）：请求头RequestHeaders、响应头ResponseHeaders")]),_._v(" "),s("li",[_._v("主体：请求主体、响应主体")])])])]),_._v(" "),s("h2",{attrs:{id:"_6-tcp四次挥手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-tcp四次挥手"}},[_._v("#")]),_._v(" 6. TCP四次挥手")]),_._v(" "),s("p",[s("strong",[_._v("断开TCP连接通道（客户端把请求头、请求主题信息传给服务端后就开启断开连接）")])]),_._v(" "),s("ul",[s("li",[_._v("正常情况下，每一次请求，4、5、6三个步骤都走一遍「问题：每一次TCP连接和关闭都是消耗时间的」")]),_._v(" "),s("li",[_._v("Connection: keep-alive")]),_._v(" "),s("li",[_._v("长连接「保持TCP通道暂时不关闭」，HTTP1.1版本及以后，默认都是带着这个属性的\n"),s("img",{attrs:{src:"http://note.youdao.com/yws/public/resource/72396c5ddee8104910f29d904a6e9569/xmlnote/WEBRESOURCE6a75b3de4d8f589ebe090ee2eb6c9510/4150",alt:"image"}})])]),_._v(" "),s("ol",[s("li",[_._v("第一次挥手：由浏览器发起的，发送给服务器，我请求报文发送完了，你准备关闭吧")]),_._v(" "),s("li",[_._v("第二次挥手：由服务器发起的，告诉浏览器，我请求报文接受完了，我准备关闭了，你也准备吧")]),_._v(" "),s("li",[_._v("第三次挥手：由服务器发起，告诉浏览器，我响应报文发送完了，你准备关闭吧")]),_._v(" "),s("li",[_._v("第四次挥手：由浏览器发起，告诉服务器，我响应报文接受完了，我准备关闭了，你也准备吧")])]),_._v(" "),s("h2",{attrs:{id:"_7-浏览器解析渲染页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-浏览器解析渲染页面"}},[_._v("#")]),_._v(" 7. 浏览器解析渲染页面")]),_._v(" "),s("ol",[s("li",[_._v("解析HTML，构建DOM树")]),_._v(" "),s("li",[_._v("解析CSS，生成CSS规则树")]),_._v(" "),s("li",[_._v("合并DOM树和CSS规则，生成render树")]),_._v(" "),s("li",[_._v("布局render树（Layout/reflow），负责各元素尺寸、位置的计算")]),_._v(" "),s("li",[_._v("绘制render树（paint），绘制页面像素信息")]),_._v(" "),s("li",[_._v("浏览器会将各层的信息发送给GPU，GPU会将各层合成（composite），显示在屏幕上")])])])}),[],!1,null,null,null);v.default=t.exports}}]);