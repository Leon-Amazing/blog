(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{522:function(e,t,l){"use strict";l.r(t);var i=l(6),o=Object(i.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h2",{attrs:{id:"_1-谈谈你对mvvm的理解"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-谈谈你对mvvm的理解"}},[e._v("#")]),e._v(" 1.谈谈你对MVVM的理解")]),e._v(" "),l("p",[e._v("MVVM是 Model-View-ViewModel的缩写，即模型-视图-视图模型。MVVM 是一种设计思想。")]),e._v(" "),l("ul",[l("li",[e._v("模型（Model）： 数据保存—存放着各种数据，有的是固定写死的，大多数是从后端返回的数据")]),e._v(" "),l("li",[e._v("视图 （View）：用户界面，也就是DOM")]),e._v(" "),l("li",[e._v("视图模型（View-Model）:连接View和Model的桥梁，当数据变化时，ViewModel够监听到数据的变化（通过Data Bindings），自动更新视图，而当用户操作视图，ViewModel也能监听到视图的变化（通过DOM Listeners），然后通知数据做改动，这就实现了数据的双向绑定。")])]),e._v(" "),l("p",[l("img",{attrs:{src:"https://leoamazing.gitee.io/blog/img/frontend/2021/0123/1.png",alt:""}})]),e._v(" "),l("h3",{attrs:{id:"mvvm和-mvc-区别"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#mvvm和-mvc-区别"}},[e._v("#")]),e._v(" MVVM和 MVC 区别")]),e._v(" "),l("ul",[l("li",[e._v("都是一种设计思想")]),e._v(" "),l("li",[e._v("MVC 后台用的多，MVC是Model-View-Controller的简写，即模型-视图-控制器。")]),e._v(" "),l("li",[e._v("MVC的目的就是将M和V 的代码分离")]),e._v(" "),l("li",[e._v("MVC是单向通信，也就是View和Model，必须通过Controller来承上启下")]),e._v(" "),l("li",[e._v("MVC对于前端而言，数据变化无法同步到视图中。需要将逻辑聚拢在controller\n层")]),e._v(" "),l("li",[e._v("MVVM实现了View和Model的自动同步，当Model的属性改变时，不用再自己手动操作DOM元素，提高了页面渲染性能")])]),e._v(" "),l("p",[l("img",{attrs:{src:"https://leoamazing.gitee.io/blog/img/frontend/2021/0123/1.png",alt:""}})])])}),[],!1,null,null,null);t.default=o.exports}}]);